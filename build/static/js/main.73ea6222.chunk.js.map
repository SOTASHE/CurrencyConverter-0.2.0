{"version":3,"sources":["components/Navbar/Navbar.js","components/Middle/Middle.js","components/Api/Api.js","components/Photospace/Photospace.js","components/About/About.js","components/Footer/Footer.js","containers/Page_One/Page_One.js","components/Converter/CurrencyRow.js","components/Converter/Converter.js","containers/Page_Three/Page_Three.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","href","Middle","Api","target","Photospace","About","src","alt","Footer","PageOne","CurrencyRow","currency","selectedCurrency","onSelect","amount","onChangeAmount","type","placeholder","value","onChange","map","index","key","requestURL","Converter","props","useState","setCurrency","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","console","log","toAmount","fromAmount","setAmount","amountIntFromCurrency","setAmountIntFromCurrency","useEffect","fetch","then","response","json","data","base","Object","keys","rates","event","e","PageTwo","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73ea6222.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"menu-icon\">\r\n        <i className=\"fa fa-bars fa-2x\"></i>\r\n      </div>\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-dollar-sign fa-lg\"></i>\r\n          <span>Currency Exchange / Converter</span>\r\n        </Link>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"/\">Convert</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/about\">About</a>\r\n          </li>\r\n          {/* <li><a href='/currencies'>Currencies</a></li> */}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './Middle.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Middle = () => {\r\n  return (\r\n    <div className=\"mainText\">\r\n      <div className=\"container\">\r\n        <h1>Currency Exchange</h1>\r\n        <p> \r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.  \r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.  \r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n\r\n        \r\n        </p>\r\n        <Link to='/'>\r\n          <button>Check Currencies</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Middle","import React from 'react';\r\nimport './Api.css'\r\n\r\n\r\nconst Api = () => {\r\n  \r\n  return (\r\n    <div className=\"api_resource\">\r\n      <div className=\"container\">\r\n        <h1>API Resources</h1>\r\n        <div className=\"api\">\r\n          <div className=\"api_desc\">\r\n            <h2> Free exchange API</h2>\r\n            <p>\r\n              Exchange rates API is a simple and lightweight free service for\r\n              current and historical foreign exchange rates & crypto exchange\r\n              rates.Reliable and up-to-date EU VAT rates, sourced directly from\r\n              the European Commission's databases\r\n            </p>\r\n            <button>\r\n              <a href=\"https://exchangerate.host/#/\" target=\"_blank\">\r\n                View API\r\n              </a>{\" \"}\r\n            </button>\r\n          </div>\r\n          <div className=\"api_desc\">\r\n            <h2>API DOCUMENTATION</h2>\r\n            <p>\r\n              The API comes with multiple endpoints, each serving a different\r\n              use case. Endpoint functionalities include getting the latest\r\n              exchange rate data for all or a specific set of currencies,\r\n              converting amounts from one currency to another...{\" \"}\r\n            </p>\r\n            <button>\r\n              <a href=\"https://exchangerate.host/#/#docs\" target=\"_blank\">\r\n                View API\r\n              </a>{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Api","import React from 'react';\r\nimport './Photospace.css'\r\n\r\nconst Photospace = () => {\r\n  return (\r\n    <div className=\"photo_space\">\r\n      <h1>Know the value of your money</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photospace\r\n","import React from 'react';\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n     <div className=\"about_me\">\r\n      <div className=\"container\">\r\n        <div className=\"image\">\r\n          <img src=\"/img/snaye.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"message\">\r\n          <p>Your name</p>\r\n          <p> \r\n\r\n            LOREM IPSUM DOLOR SIT AMET, CONSECTETUR ADIPISCING ELIT.\r\n            LOREM IPSUM DOLOR SIT AMET, CONSECTETUR ADIPISCING ELIT.\r\n            LOREM IPSUM DOLOR SIT AMET, CONSECTETUR ADIPISCING ELIT. \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default About","import React from 'react';\r\nimport './Footer.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"my_website\">\r\n        <Link to=\"/\">\r\n          <p>https://snayes.netlify.app/</p>\r\n        </Link>\r\n      </div>\r\n      <div className=\"social_media\">\r\n        <a href=\"https://github.com/SOTASHE\" target=\"_blank\">\r\n          <img src=\"./img/github.png\" alt=\"\" />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/snaye-sotashe-581964183/\"\r\n          target=\"_blank\"\r\n        >\r\n          <img src=\"./img/linkedin.png\" alt=\"\" />\r\n        </a>\r\n        <a href=\"https://twitter.com/Cnae6\" target=\"_blank\">\r\n          <img src=\"./img/twitter.png\" alt=\"\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer","import React, {Fragment} from 'react';\r\nimport './Page_One.css'\r\n\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport Middle from '../../components/Middle/Middle'\r\nimport Api from '../../components/Api/Api'\r\nimport Photo from '../../components/Photospace/Photospace'\r\nimport About from '../../components/About/About'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nconst PageOne = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header\">\r\n        <Navbar />\r\n        <Middle />\r\n      </div>\r\n      <Api />\r\n      <Photo />\r\n      <About />\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\nexport default PageOne\r\n","import React from 'react'\n\nexport default function CurrencyRow({\n  currency,\n  selectedCurrency,\n  onSelect,\n  amount,\n  onChangeAmount,\n}) {\n  return (\n    <div>\n      <input\n        type=\"number\"\n        placeholder=\"0.00\"\n        className=\"input\"\n        value={amount}\n        onChange={onChangeAmount}\n      />\n      <select value={selectedCurrency} onChange={onSelect}>\n        {/* <option value=\"ZAR\">ZAR</option> \n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n        <option value=\"GBP\">GBP</option>\n        <option value=\"HKD\">HKD</option> \n        <option value=\"KES\">KES</option> */}\n\n        {currency.map((currency, index) => {\n          return (\n            <option key={index} value={currency}>\n              {currency}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\r\nimport './Converter.css'\r\n\r\nimport CurrencyRow from './CurrencyRow'\r\n\r\nconst requestURL = \"https://api.exchangerate.host/latest?base=ZAR\";\r\n\r\nconst Converter = (props) => {\r\n\r\n   const [currency, setCurrency] = useState([]);\r\n\r\n   //from currency to base currency\r\n   const [fromCurrency, setFromCurrency] = useState();\r\n   //to currency\r\n   const [toCurrency, setToCurrency] = useState();\r\n   //exchange rate\r\n   const [exchangeRate, setExchangeRate] = useState();\r\n\r\n   console.log(exchangeRate);\r\n   //amount to convert\r\n   const [amount, setAmount] = useState(1);\r\n   //converted amount\r\n   const [convertedAmount, setConvertedAmount] = useState(0);\r\n  const [amountIntFromCurrency, setAmountIntFromCurrency] = useState(true);\r\n  \r\n\r\n  \r\n  let toAmount, fromAmount;\r\n  if (amountIntFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    fromAmount = amount / exchangeRate;\r\n    toAmount = amount;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(requestURL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setCurrency([data.base, ...Object.keys(data.rates)]);\r\n\r\n        setFromCurrency(data.base);\r\n        setToCurrency(Object.keys(data.rates)[0]);\r\n\r\n        setExchangeRate(data.rates[Object.keys(data.rates)[0]]);\r\n        //setBase(data.base);\r\n        //setInterval(15 * 60 * 1000);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(requestURL)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setExchangeRate(data.rates[toCurrency]);\r\n        });\r\n    }\r\n  }, [fromCurrency, toCurrency]);\r\n    \r\n    \r\n    \r\n    \r\n  \r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1>Convert any currency</h1>\r\n          <p>Select any currency that you want to convert.</p>\r\n          <CurrencyRow\r\n            currency={currency}\r\n            selectedCurrency={fromCurrency}\r\n            onSelect={(event) => setFromCurrency(event.target.value)}\r\n            amount={fromAmount}\r\n            onChangeAmount={(event) => {\r\n              setAmount(event.target.value);\r\n              setAmountIntFromCurrency(true);\r\n            }}\r\n          />\r\n          <div className=\"equals\">=</div>\r\n          <CurrencyRow\r\n            currency={currency}\r\n            selectedCurrency={toCurrency}\r\n            onSelect={(e) => setToCurrency(e.target.value)}\r\n            amount={toAmount}\r\n            onChangeAmount={(event) => {\r\n              setAmount(event.target.value);\r\n\r\n              setAmountIntFromCurrency(false);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Converter","import React, {Fragment} from 'react';\r\nimport './Page_Three.css'\r\n\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport Converter from '../../components/Converter/Converter'\r\nimport Api from '../../components/Api/Api'\r\nimport Photo from '../../components/Photospace/Photospace'\r\nimport About from '../../components/About/About'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nimport CurrencyRow from '../../components/Converter/Converter'\r\n\r\n\r\n\r\n\r\nconst PageTwo = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"header\">\r\n        <Navbar />\r\n        <CurrencyRow\r\n        />\r\n      </div>\r\n      <Api />\r\n      <Photo />\r\n      <About />\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PageTwo\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport PageOne from './containers/Page_One/Page_One'\nimport PageThree from './containers/Page_Three/Page_Three'\n\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <PageThree />\n        </Route>\n        <Route path=\"/about\">\n          <PageOne />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}